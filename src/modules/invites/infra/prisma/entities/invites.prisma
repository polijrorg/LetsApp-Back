model Invite {
  id             String       @id @default(uuid())
  name           String
  begin          String
  end            String
  description    String
  phone          String
  address        String
  link           String?
  state          String
  googleId       String
  guests         InviteUser[]
  organizerPhoto String?
  organizerName  String

  @@map("invite")
}

model User {
  phone   String       @unique
  invites InviteUser[]
  email   String       @unique

  @@map("user")
}

model InviteUser {
  id        String  @id @default(uuid())
  User      User    @relation(fields: [userEmail], references: [email])
  Invite    Invite  @relation(fields: [idInvite], references: [id])
  optional  Boolean
  userEmail String
  idInvite  String
  Status    String  @default("needsAction")
}

model PseudoUser {
  id               String             @id @default(uuid())
  phone            String?            @unique
  email            String?            @unique
  PseudoInviteUser PseudoInviteUser[] @relation("PseudoInviteUserToPseudoUser")

  @@map("pseudo_users")
}

model PseudoInviteUser {
  id             String       @id @default(uuid())
  pseudoUser     PseudoUser   @relation("PseudoInviteUserToPseudoUser", fields: [pseudoUserId], references: [id])
  pseudoInvite   PseudoInvite @relation("PseudoInviteUserToPseudoInvite", fields: [pseudoInviteId], references: [id])
  pseudoUserId   String
  pseudoInviteId String
  Status         String       @default("needsAction")
}

model PseudoInvite {
  id String @id @default(uuid())

  PseudoInviteUser PseudoInviteUser[] @relation("PseudoInviteUserToPseudoInvite")

  @@map("pseudo_invites")
}
