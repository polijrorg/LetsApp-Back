model User {
  id         String       @id @default(uuid())
  name       String?
  phone      String       @unique
  email      String?      @unique
  photo      String?
  code       Int?
  created_at DateTime     @default(now())
  updated_at DateTime     @default(now())
  tokens     String?
  type       Type?
  invites    InviteUser[]
  contatos   Contato[]

  @@map("user")
}

model InviteUser {
  id        String  @id @default(uuid())
  User      User    @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  Invite    Invite  @relation(fields: [inviteId], references: [id], onDelete: Cascade)
  userEmail String
  inviteId  String
  Status    String  @default("needsAction")
  optional  Boolean
}

model Invite {
  id String @id @default(uuid())

  guests InviteUser[]

  @@map("invite")
}

enum Type {
  GOOGLE
  OUTLOOK
}

model Contato {
  id     String  @id @default(uuid())
  name   String
  phone  String?
  email  String?
  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@map("contato")
}
